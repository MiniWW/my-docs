import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as i,f as t}from"./app-B5wQ218V.js";const a={},o=t('<h1 id="设计模式导入" tabindex="-1"><a class="header-anchor" href="#设计模式导入"><span>设计模式导入</span></a></h1><h2 id="设计模式分类-what" tabindex="-1"><a class="header-anchor" href="#设计模式分类-what"><span>设计模式分类（what）</span></a></h2><ul><li>创建型模式 <ul><li>关注”怎么创建对象&quot;,将对象的”创建“和”使用“分离的一种设计模式</li><li>有单例（内部状态不可变），原型，工厂方法，抽象工厂，建造者5种模式</li></ul></li><li>结构型模式 <ul><li>关注”对象之间的组合关系&quot;,来简化系统的设计，的一种设计模式</li><li>有代理，适配器，桥接，装饰，外观，享元，组合7种模式</li></ul></li><li>行为型模式 <ul><li>这种模式关注”对象之间的通信和协作&quot;,处理对象的行为与算法的关系，来完成单个对象不能完成的任务</li><li>有模板方法，策略，状态11种模式</li></ul></li></ul><h2 id="设计模式思考方向-how" tabindex="-1"><a class="header-anchor" href="#设计模式思考方向-how"><span>设计模式思考方向（how）</span></a></h2><ul><li>角色（结构）：一般分为抽象角色和具体角色</li><li>对象是否有多种行为和算法供你选择？ <ul><li><ol><li>是：用状态模式或策略模式来管理行为</li></ol></li></ul></li><li>对象是否内部状态不可变？ <ul><li><ol><li>是：用单例模式来创建对象（实例）</li></ol></li></ul></li><li>系统中是否有大量重复的代码？ <ul><li><ol><li>是：用模板方法来减少重复代码？</li></ol></li></ul></li></ul>',5),s=[o];function n(r,h){return e(),i("div",null,s)}const d=l(a,[["render",n],["__file","DesignPatternInto.html.vue"]]),m=JSON.parse('{"path":"/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%BE%85%E5%AE%8C%E5%B7%A5/DesignPatternInto.html","title":"设计模式导入","lang":"zh-CN","frontmatter":{"cover":"/assets/images/cover2.jpg","icon":"pen-to-square","date":"2024-05-05T00:00:00.000Z","category":["设计模式"],"tag":["红","圆"],"star":true,"sticky":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"设计模式分类（what）","slug":"设计模式分类-what","link":"#设计模式分类-what","children":[]},{"level":2,"title":"设计模式思考方向（how）","slug":"设计模式思考方向-how","link":"#设计模式思考方向-how","children":[]}],"git":{"createdTime":1714965762000,"updatedTime":1726469543000,"contributors":[{"name":"MiniWH","email":"122033963+MiniWwww@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.05,"words":316},"filePathRelative":"posts/设计模式/待完工/DesignPatternInto.md","localizedDate":"2024年5月5日"}');export{d as comp,m as data};
